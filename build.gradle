buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.pawalert'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // 소셜로그인 테스트 위해 설정
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    //mongodb
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.1'

    //websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'


    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // mariadb
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

    //security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    //oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    //리소스 서버
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // 특정 웹사이트의 데이터를 수집
    implementation 'org.jsoup:jsoup:1.16.1'

    // 웹 서버에 HTTP 요청을 보내고 응답을 받는 데 / API를 호출하여 데이터를 가져오거나, 파일을 업로드하는 등의 작업을 수행할 때 활용
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.2'

    // Excel 파일을 읽고 쓰는 작업을 자동화하는 데 사용
    implementation 'org.apache.poi:poi-ooxml:5.2.3'

    // 배치
    implementation 'org.springframework.boot:spring-boot-starter-batch'

    // aws
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.1.1'


    // querydsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor(
            "jakarta.persistence:jakarta.persistence-api",
            "jakarta.annotation:jakarta.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    )
}

tasks.named('test') {
    useJUnitPlatform()
}
